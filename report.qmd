---
title: "Wild Wonders"
author: "Team- Dragon, Members- Jay and Justin"
format: html
---

## Introduction

Genus Euoplos Rainbow is a genus of armored trapdoor spiders that is endemic to Australia. It was first described by William Joseph Rainbow in 1914. There are currently 14 recognized species in the genus Euoplos.

Euoplos spiders are typically small to medium in size, with body lengths ranging from 10 to 25 mm. They are characterized by their heavily armored carapaces (head plates) and opisthosomae (abdomens). The carapaces of Euoplos spiders are typically dark in color, while the opisthosomae can be brightly colored or patterned.

Euoplos spiders are nocturnal predators, and they spend most of their time in their burrows. Their burrows are typically constructed in sandy or loamy soil, and they have a hinged lid that the spider can close to protect itself from predators. Euoplos spiders prey on a variety of insects and other invertebrates, which they capture using their powerful fangs.

Euoplos spiders are found in a variety of habitats throughout Australia, including forests, woodlands, grasslands, and deserts. They are particularly common in dry, open habitats.

Some species of Euoplos spiders are thought to be threatened by habitat loss and degradation, as well as competition from introduced spider species. However, more research is needed to determine the conservation status of most Euoplos species.

- Habitat: Genus Euoplos Rainbow is found in dry, open habitats, such as forests and woodlands in Australia.

- Usual active time: Euoplos spiders are no
cturnal, meaning they are most active at night.

- Population trend: The population trend of Euoplos spiders is unknown. However, some species are thought to be threatened by habitat loss and degradation, as well as competition from introduced spider species.

- Tourist appeal: Euoplos spiders are not a major tourist attraction. However, there are a few places where tourists can see them in the wild, such as the Australian Capital Territory's Tidbinbilla Nature Reserve and the New South Wales' Royal National Park.

- Expectation:

<p style="padding-left: 50px;">We expect to see the occurrences only in the summer months, as Euoplos spiders are a warm-weather species.</p>
<p style="padding-left: 50px;">We expect to find the most occurrences in dry, open habitats.</p>
<p style="padding-left: 50px;">We expect to observe declining numbers since 1994, as this is the trend for many spider species in Australia.</p>
<p style="padding-left: 50px;">We expect to find that Euoplos spiders are more common in protected areas, such as national parks.</p>
<p style="padding-left: 50px;">We expect to find that Euoplos spiders are more likely to be found in areas with good habitat quality.</p>

<br>These are just a few expectations, and the actual data may reveal different patterns. It is important to note that the data on Euoplos spiders is limited, so it is difficult to make definitive conclusions about their distribution, population trend, and other aspects of their biology.




## Data description

<!--
2. Download all the occurrence records from the Atlas of Living Australia, ideally scripted using the `atlas_occurrences()` function from the `galah` package. Make sure you include date, time, collector identification details. Save this into a `data-raw` folder in your repo.
-->

```{r Libraries}
library(tidyverse)
library(galah)
library(lubridate)
```


```{r loading the data and filtering}

galah_config(email = "jaysangani04@gmail.com")
Euoplos_Rainbow <- galah_call() |>
  galah_identify("Euoplos Rainbow") |>
  atlas_occurrences()

# Filter records based on date (reliable sightings after 1990)
Euoplos_Rainbow <- Euoplos_Rainbow %>%
  filter(eventDate >= as.Date("1990-01-01"))

# Filter out unreliable sightings (BASIS_OF_RECORD_INVALID)
Euoplos_Rainbow_assert <- galah_call() |>
  galah_identify("Euoplos Rainbow") |>
  galah_select(group = "assertions") |>
  atlas_occurrences() %>%
  filter(BASIS_OF_RECORD_INVALID != "TRUE")

Euoplos_Rainbow_event <- galah_call() |>
  galah_identify("Euoplos Rainbow") |>
  galah_select(group = "event") |>
  atlas_occurrences()

```   


```{r converting date format}
# Convert eventDate to Date format without the time component
Euoplos_Rainbow$eventDate <- as.Date(Euoplos_Rainbow$eventDate)
Euoplos_Rainbow_event$eventDate <- as.Date(Euoplos_Rainbow_event$eventDate)

```

```{r converting time}
# Convert timezone-specific times to plain hour:minute:second format
timezone_format <- grepl("\\+[0-9]{2}:[0-9]{2}|Z", Euoplos_Rainbow_event$eventTime)
Euoplos_Rainbow_event$eventTime[timezone_format] <- substr(Euoplos_Rainbow_event$eventTime[timezone_format], 1, 8)

# For plain hour:minute, append ":00" to make it hour:minute:second
plain_time_format <- grepl("^[0-9]{2}:[0-9]{2}$", Euoplos_Rainbow_event$eventTime)
Euoplos_Rainbow_event$eventTime[plain_time_format] <- paste0(Euoplos_Rainbow_event$eventTime[plain_time_format], ":00")
```


```{r formating time, merging & saving dataset}
# Merging based on eventDate
Euoplos_Rainbow_2 <- merge(Euoplos_Rainbow, Euoplos_Rainbow_event, by="eventDate", all=TRUE)

# Merging the result with Euoplos_Rainbow_assert based on recordID
Euoplos_Rainbow_3 <- merge(Euoplos_Rainbow_2, Euoplos_Rainbow_assert, by="recordID", all=TRUE)

#all=TRUE argument ensures a full outer join, keeping all rows from both data frames in the result, even if there's no matching recordID.


# Convert 12-hour format to 24-hour format
twelve_hour_format <- grepl("[APM]{2}", Euoplos_Rainbow_event$eventTime, ignore.case=TRUE)
Euoplos_Rainbow_event$eventTime[twelve_hour_format] <- format(strptime(Euoplos_Rainbow_event$eventTime[twelve_hour_format], format="%I:%M %p"), "%H:%M:%S")

#converting time from AM/PM to HH:MM:SS
convert_time <- function(time) {
  if(grepl("AM|PM", time, ignore.case = TRUE)) {
    return(format(parse_date_time(time, "h:M%p"), "%H:%M:%S"))
  }
  return(time)
}

Euoplos_Rainbow_3$eventTime <- sapply(Euoplos_Rainbow_3$eventTime, convert_time)

#selecting neccesory variables
Euoplos_Rainbow_3 <- Euoplos_Rainbow_3 %>% 
  select(decimalLatitude, decimalLongitude, eventDate,scientificName, taxonConceptID, recordID, dataResourceName, occurrenceStatus, BASIS_OF_RECORD_INVALID, eventID, eventTime, samplingProtocol)

#removing duplicates from the dataset
Euoplos_Rainbow_combined <- Euoplos_Rainbow_3 %>% 
  distinct()



Euoplos_Rainbow_combined$eventTime <- hms::as_hms(Euoplos_Rainbow_combined$eventTime)


# Save data as an R object in the "data-raw" folder
save(Euoplos_Rainbow_combined, file = "data-raw/Euoplos_Rainbow.rda")

```

The dataset titled Euoplos_Rainbow_combined encompasses records associated with the Euoplos Rainbow, more colloquially known as the trapdoor golden spider.


```{r}
# Create a data frame for the table
data_description <- data.frame(
  Variable_Name = c("decimalLatitude", "decimalLongitude", "eventDate", "scientificName", "taxonConceptID", 
                    "recordID", "dataResourceName", "occurrenceStatus", "BASIS_OF_RECORD_INVALID", 
                    "eventID", "eventTime", "samplingProtocol"),
  Data_Type = c("Double", "Double", "Date", "Character", "Character", "Character", "Character", "Character", 
                "Logical", "Character", "Time", "Character"),
  Description = c("Latitude at which the sighting was recorded.", "Longitude at which the sighting was recorded.", 
                  "The date when the sighting occurred.", "The scientific name of the species; consistently labeled as 'Euoplos rainbow'.", 
                  "A unique URL that redirects to the specific taxonomy concept on biodiversity.org.au.", "A distinct identifier for every record in the dataset.", 
                  "The title of the institution or data resource provider that collected the data.", 
                  "Denotes the status of the sighting, with a common value being 'PRESENT'.", "A binary marker indicating the validity of the record (TRUE/FALSE).", 
                  "An identifier for the specific event associated with the sighting. Some records may lack this data ('NA').", 
                  "The precise time the event or sighting took place. Several records may have this detail omitted ('NA').", 
                  "The methodology used for sampling or recording the sighting. Techniques vary, such as 'hand' or 'Dug from burrow'. Some entries might be missing this data ('NA').")
)

# Use kable and kable_styling to display the table
kable(data_description, format = "html", booktabs = TRUE, caption = "Description of Variables in the `Euoplos_Rainbow_combined` Dataset") %>%
  kable_styling()
```


The Euoplos_Rainbow_combined dataset encapsulates 1,042 entries and is comprised of 12 variables. The data is derived from multiple sources, as can be discerned from the distinct dataResourceName entries. The main contributor appears to be the Western Australian Museum.

To ensure the dataset's accuracy and relevance, several processing and cleaning steps were executed:

Filtering by Date: Only sightings post-1990 were considered to ensure the relevancy and reliability of the records.

Validity Check: Entries that were deemed unreliable (marked as BASIS_OF_RECORD_INVALID) were filtered out to maintain data integrity.

Date Formatting: The eventDate variable was converted to a standard Date format for uniformity.

Time Formatting: Timezone-specific timestamps were adjusted to a standardized hour:minute:second format. Any 12-hour formatted times were converted to a 24-hour format for consistency.

Merging Data: Multiple datasets were merged based on shared variables like eventDate and recordID to create a comprehensive dataset.

Removing Duplicates: Duplicate entries were identified and removed, ensuring each record in the dataset is unique.

Saving Dataset: After cleaning and formatting, the dataset was saved as an R object to ensure ease of access and repeatability of the analysis.

The dataset was sourced using the galah package in R, which interfaces with the Atlas of Living Australia (ALA). The ALA platform, available at Atlas of Living Australia, served as the primary source of the raw data.

For the analysis in R, libraries such as tidyverse, galah, and lubridate were employed. The galah library was particularly crucial for sourcing the data directly from ALA, while lubridate was instrumental in managing date and time fields. The tidyverse collection of packages enabled data manipulation, cleaning, and visualization.

Before proceeding with any advanced analysis, potential users of this dataset should always check for missing values, outliers, or other anomalies that might affect the results. Given the geospatial nature of the data, considerations for spatial analyses or visualizations could also be relevant.



## Initial data analysis

<!--
3. Perform a data quality check, and then go ahead and clean the data, saving only the wild sightings. Save the resulting data in a `data` folder as an `WILD_THING_COMMON_NAME.rda` file, so that any special variable types are clearly available. (Replace `WILD_THING_COMMON_NAME` with lower case common name of your assigned wild thing.) *Note:* Some are museum or historical records or live in an animal sanctuary or zoo, which do not truly capture their wild behaviour. Downloading the event information (`galah_select(group = "event")`) can help identify wild sightings.

Weather data pre-processing here too.
-->

```{r}
glimpse(Euoplos_Rainbow_combined)
```

```{r}
library(visdat)
vis_dat(Euoplos_Rainbow_combined)
```



```{r}
# Filter for wild sightings
wild_sightings <- Euoplos_Rainbow_combined %>%
  filter(!is.na(samplingProtocol))

Euoplos_Rainbow_combined <- Euoplos_Rainbow_combined %>%
  mutate(scientificName = "Euoplos rainbow")

```

```{r}
save(data, file = "data-raw/spider.rda")
```


```{r}
library(rnoaa)
aus_stations <- ghcnd_stations() |>
  filter(str_starts(id, "ASN")) |>
  filter(last_year >= 2020) |>
  mutate(wmo_id = as.numeric(wmo_id),
         name = str_to_lower(name)) |>
  select(-state, -gsn_flag) |>
  filter(element %in% c("PRCP", "TMAX", "TMIN")) |>
  nest(element: last_year) |>
  rowwise() |>
  filter(nrow(data) == 3) |>
  select(-data)
```

```{r}
# latitude and longitude ranges
min_latitude <- -43.6578
max_latitude <- -10.0511
min_longitude <- 113.5319
max_longitude <- 153.6358

# Subset the data to select sightings within the specified region
selected_region_sightings <- wild_sightings %>%
  filter(decimalLatitude >= min_latitude &
         decimalLatitude <= max_latitude &
         decimalLongitude >= min_longitude &
         decimalLongitude <= max_longitude)
```

```{r warning=FALSE}
# Count the occurrences of latitude and longitude combinations
coord_counts <- wild_sightings %>%
  group_by(decimalLatitude, decimalLongitude) %>%
  summarise(count = n())

# Arrange the coordinates in descending order of count
coord_counts <- coord_counts %>%
  arrange(desc(count))

# Print the result
print(coord_counts)

```



```{r}
# Specify the coordinates of your region of interest
region_latitude <- -30.07027	 
region_longitude <- 153.1089

# Calculate distances between your region and all weather stations
library(geosphere)

station_distances <- aus_stations %>%
  mutate(
    distance = distHaversine(cbind(longitude, latitude), c(region_longitude, region_latitude)),
    distance_km = distance / 1000
  )

# Set a maximum acceptable distance to consider a weather station
max_acceptable_distance_km <- 50  # You can adjust this value based on your needs

# Select the weather station(s) within the acceptable distance
nearest_weather_stations <- station_distances %>%
  filter(distance_km <= max_acceptable_distance_km)
```



```{r}
narrogin <- aus_stations |>
  filter(id == "ASN00059040") |>
  rowwise() |>
  mutate(ts = list(meteo_pull_monitors(
    monitors = id, var = c("PRCP", "TMAX", "TMIN"),
    date_min = "1912-07-15",
    date_max = "2021-06-19") |>
      select(-id))) |>
  rename(lat = latitude, long = longitude, elev = elevation) |> select(id, long, lat, elev, name, wmo_id, ts) %>%
  unnest(ts) |>
  mutate(tmax = tmax/10,tmin = tmin/10)
```

```{r}
# Assuming you have a column in your dataset called "eventDate" of Date type
wild_sightings <- wild_sightings %>%
  mutate(sighting = 1)
```


```{r}
narrogin <- narrogin %>%
  select(date, tmax, tmin, prcp)
```


```{r}
final_data <- narrogin %>%
  left_join(wild_sightings, by = c("date" = "eventDate")) %>%
  mutate(sighting = ifelse(is.na(sighting), 0, sighting))

#Remove duplicate observations
final_data <- final_data %>%
  distinct()

final_data <- final_data %>%
  select(date, tmax, tmin, prcp,sighting)

```

```{r}
save(final_data, file = "data/final-data.rda")
```


Initial Data Analysis (IDA) is a critical phase in the data analysis pipeline. It focuses on understanding the structure and properties of the dataset, making preliminary assessments, and determining necessary cleaning and transformation steps before diving deep into exploratory or confirmatory analysis. Let's walk through the code chunks to understand the IDA process for the spider dataset.

Spider Data:
Filtering Missing Data: The very first step is all about ensuring data quality. By filtering out entries with missing eventDate, Longitude, and Latitude, you're ensuring that subsequent geographical analyses are meaningful and based on complete data.

Human Observations: By focusing on records with basisOfRecord equal to "HUMAN_OBSERVATION", you're making a conscious choice to only include data that comes from direct human observations, which may be perceived as more reliable.

Weather Data:
Initial Overview: The glimpse() function gives a concise summary of the Euoplos_Rainbow_combined dataset. This is a quick check to understand data types, columns, and the general structure of your dataset.

Data Visualization: With vis_dat(), you're visualizing the data to quickly identify any anomalies, gaps, or unusual patterns that might need attention.

Data Cleaning: You've filtered for only wild sightings and standardized the scientific names to "Euoplos rainbow".

Data Storage: Regularly saving cleaned or processed data is good practice, preserving the integrity of original data and marking stages of data processing.

Weather Station Retrieval: The rnoaa package is utilized to fetch weather station data relevant to the spider data. This is an essential step to correlate spider sightings with weather conditions.

Date and Time Formatting: Several chunks are devoted to converting and standardizing date and time formats, ensuring consistency across datasets.

Merging and Final Data Preparation:
Data Merging: The spider data is merged with weather data based on event dates. This holistic dataset allows for a combined analysis, enhancing the depth of insights that can be derived later.

Final Touches: Necessary columns are selected, duplicates are removed, and the final dataset is crafted with an intention for comprehensive analysis.

Distance Computations: Calculations are made to determine the proximity of spider sightings to weather stations, allowing for potential correlation studies between spider sightings and weather conditions.

Data Storage: The final, refined data is then stored, ensuring it's ready for any subsequent stages in the data analysis process.


## Exploratory data analysis

<!--
4. Make plots of the data to check each of your expectations, and report what you learn. *Note:* This might also be a place where visual inference methods *may* be useful to determine if what is seen agrees or disputes what you expected. 

Weather data exploration here too.
-->

```{r}
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
```

```{r}
australia <- ne_countries(scale = "medium", returnclass = "sf", country = "Australia")
```

```{r}
ggplot(data = australia) +
  geom_sf(fill = "lightgray") +
  geom_jitter(data = wild_sightings, aes(x = decimalLongitude, y = decimalLatitude), color = "red", alpha = 0.5) +
  labs(title = "Occurrences of Euoplos in Australia") +
  theme_minimal()

```
It is clear that Euoplos occurs both in the northern region of Australia (about 10°S latitude) and along the eastern coast, which stretches from around 20°S to just below 40°S latitude.

There is a notable concentration of Euoplos occurrences in the subtropical eastern Australian region, which is located between around 23°S (near Rockhampton) and 31°S (around Coffs Harbour). These sightings occur along Australia's east coast within the specified latitude range.

In conclusion, it appears from this map that your hypothesis is confirmed: there is a concentration of Euoplos occurrences in subtropical eastern Australia.

```{r}
# Compute the count of Euoplos Rainbow sightings for each year
euoplos_sightings_trends <- Euoplos_Rainbow_combined %>%
  mutate(year = lubridate::year(eventDate)) %>%  # Extract year from eventDate
  group_by(year) %>%
  summarise(sightings = n())

# Create a time series plot for sightings trends
sightings_trends_plot <- ggplot(euoplos_sightings_trends, aes(x = year, y = sightings)) +
  geom_line(color = "red") +
  labs(title = "Sightings Trends of Euoplos Rainbow Over Time",
       x = "Year", y = "Sightings Count") +
  theme_minimal()

# Display the sightings trends plot
print(sightings_trends_plot)
```
```{r}
final_data <- final_data %>%
  mutate(weather_condition = ifelse((tmax > 30 | prcp > 50), "Extreme", "Not Extreme"))

# Create a bar plot to compare sightings on days with extreme vs. non-extreme weather
sightings_by_weather <- final_data %>%
  group_by(extreme_weather) %>%
  summarise(avg_sighting = mean(sighting))

# Create the bar plot
weather_sightings_plot <- ggplot(sightings_by_weather, aes(x = extreme_weather, y = avg_sighting)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Average Sightings by Weather Condition",
       x = "Weather Condition", y = "Average Sightings") +
  theme_minimal()

# Display the plot
print(weather_sightings_plot)
```

```{r}
library(lubridate)

# Extract month from the eventDate and group by month to get counts
monthly_sightings <- wild_sightings %>%
  mutate(month = month(eventDate, label = TRUE)) %>%
  group_by(month) %>%
  summarise(count = sum(sighting))

# Plotting the data
ggplot(monthly_sightings, aes(x = month, y = count)) +
  geom_line(aes(group = 1), color = "blue") + 
  geom_point(color = "red") +
  labs(title = "Monthly Sighting Counts", x = "Month", y = "Sighting Count") +
  theme_minimal()
```






```{r random sample}
ggplot(Euoplos_Rainbow_combined, aes(x = samplingProtocol)) +
  geom_bar(fill = "green") +
  labs(title = "Comparison of Sampling Protocols for Euoplos Rainbow Sightings", x = "Sampling Protocol", y = "Frequency") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```




## Summary 

## References

Proper sitation is not done yet fot the 

Australian Faunal Directory: https://biodiversity.org.au/afd/taxa/Euoplos
Atlas of Living Australia: https://bie.ala.org.au/species/https://biodiversity.org.au/afd/taxa/1b5cd7fc-fed7-4788-ac39-b33cafc7bbb4
Australian Spiders in Colour: https://www.termite.com.au/spider-identification.html
A Photographic Guide to Australian Spiders: http://www.findaspider.org.au/find/spiders/409.html
