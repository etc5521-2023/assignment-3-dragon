---
title: "MY WILD THING REPORT"
author: "YOUR TEAM NAME AND MEMBERS HERE"
format: html
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      warning=FALSE, 
                      message=FALSE)
```  
  

## Introduction

<!-- 
1. For your assigned Australian wild thing, read all you can about it, and write a paragraph describing it's key features, such as it's habitat, usual active time, whether numbers are increasing or declining, and even things like, if it is common for tourists to travel to see them, or there are special spotting promotions occurring as is happening [this month for the platypus](https://platypus.asn.au/report-a-sighting/). The write five unique expectations on what you might find when you explore the data, for example: 
<br><br>"We expect to see the occurrences only in the summer months."
<br>"We expect to find the most occurrences near the coast."
<br>"We expect to observe declining numbers since 1994."
<br><br> Be as specific as reasonably possible for your wild thing!
-->

The Australian golden trapdoor spiders of the tribe Euoplini, belonging to the family Idiopidae, are particularly abundant and diverse in subtropical eastern Australia. These spiders, unlike most trapdoor spiders that inhabit tropical regions globally, occupy various habitats ranging from shady riverbanks to open desert areas, showing a preference for steep slopes and loose, sandy soils. They construct burrows with distinctive trapdoor lids, which they use as both shelter and a hunting mechanism. These burrows can be found near water sources, occasionally serving as a means to catch small fish. Typically nocturnal, Euoplos Rainbow and other trapdoor spiders emerge from their burrows at night to hunt for prey, remaining concealed during the day. Information about population trends of Euoplos Rainbow is limited, largely due to the secretive nature of these spiders. They are not commonly a target for tourists, and organized promotions or tours to observe them are rare. The name "trapdoor" spider originates from their burrows, which have hinged or camouflaged door-like lids, serving as concealed traps for unsuspecting prey. 

Unique expectations for exploring the data on Euoplos Rainbow sightings could include:

1. "We expect to observe a higher concentration of Euoplos Rainbow occurrences in subtropical eastern Australia, given their abundance in this region."
   
2. "We expect to find a variety of habitat preferences in the data, ranging from riverbanks to desert areas, reflecting the adaptability of Euoplos Rainbow."

3. "We anticipate that the majority of sightings will occur during nighttime hours, consistent with the nocturnal behavior of trapdoor spiders."

4. "We do not expect to see a significant number of sightings linked to tourism, as trapdoor spiders are not typically considered tourist attractions."

5. "We expect that population data for Euoplos Rainbow may be limited, as is common with many spider species due to their secretive behavior, making precise assessments challenging."

## Data description

<!--
2. Download all the occurrence records from the Atlas of Living Australia, ideally scripted using the `atlas_occurrences()` function from the `galah` package. Make sure you include date, time, collector identification details. Save this into a `data-raw` folder in your repo.
-->

```{r}
library(galah)
library(tidyverse)
galah_config(email = "anhquang1100@gmail.com",
             download_reason_id = 10, 
             verbose = TRUE)
spider <- ala_occurrences(
  taxa = select_taxa("Euoplos Rainbow"))
spider <- spider %>% 
  rename(Longitude = decimalLongitude,
         Latitude = decimalLatitude) %>%
  mutate(eventDate = as.Date(eventDate)) %>%
  filter(!is.na(eventDate)) %>%
  filter(!is.na(Longitude)) %>%
  filter(!is.na(Latitude))

spider2 <- galah_call() %>%
  galah_identify("Euoplos Rainbow") %>%
  galah_select(basisOfRecord, samplingProtocol, group = "basic") %>%
  atlas_occurrences()

spider2 <- spider2 %>%
  filter(basisOfRecord == "HUMAN_OBSERVATION")

# Convert timezone-specific times to plain hour:minute:second format
timezone_format <- grepl("\\+[0-9]{2}:[0-9]{2}|Z", spider2$eventTime)
Euoplos_Rainbow_event$eventTime[timezone_format] <- substr(Euoplos_Rainbow_event$eventTime[timezone_format], 1, 8)

# For plain hour:minute, append ":00" to make it hour:minute:second
plain_time_format <- grepl("^[0-9]{2}:[0-9]{2}$", Euoplos_Rainbow_event$eventTime)
Euoplos_Rainbow_event$eventTime[plain_time_format] <- paste0(Euoplos_Rainbow_event$eventTime[plain_time_format], ":00")

```

```{r}
library(lubridate)
library(galah)
library(tidyverse)
galah_config(email = "jaysangani04@gmail.com")
Euoplos_Rainbow <- galah_call() |>
  galah_identify("Euoplos Rainbow") |>
  atlas_occurrences()

# Filter records based on date (reliable sightings after 1990)
Euoplos_Rainbow <- Euoplos_Rainbow %>%
  filter(eventDate >= as.Date("1990-01-01"))

# Filter out unreliable sightings (BASIS_OF_RECORD_INVALID)
Euoplos_Rainbow_assert <- galah_call() |>
  galah_identify("Euoplos Rainbow") |>
  galah_select( group = "assertions") |>
  atlas_occurrences() %>%
  filter(BASIS_OF_RECORD_INVALID != "TRUE")

Euoplos_Rainbow_event <- galah_call() |>
  galah_identify("Euoplos Rainbow") |>
  galah_select(basisOfRecord, group = "event") |>
  atlas_occurrences()

```

```{r}
# Convert eventDate to Date format without the time component
Euoplos_Rainbow$eventDate <- as.Date(Euoplos_Rainbow$eventDate)
Euoplos_Rainbow_event$eventDate <- as.Date(Euoplos_Rainbow_event$eventDate)
```

```{r}
# Convert timezone-specific times to plain hour:minute:second format
timezone_format <- grepl("\\+[0-9]{2}:[0-9]{2}|Z", Euoplos_Rainbow_event$eventTime)
Euoplos_Rainbow_event$eventTime[timezone_format] <- substr(Euoplos_Rainbow_event$eventTime[timezone_format], 1, 8)

# For plain hour:minute, append ":00" to make it hour:minute:second
plain_time_format <- grepl("^[0-9]{2}:[0-9]{2}$", Euoplos_Rainbow_event$eventTime)
Euoplos_Rainbow_event$eventTime[plain_time_format] <- paste0(Euoplos_Rainbow_event$eventTime[plain_time_format], ":00")
```

```{r}
# Merging based on eventDate
Euoplos_Rainbow_2 <- merge(Euoplos_Rainbow, Euoplos_Rainbow_event, by="eventDate", keep.all=TRUE)

# Merging the result with Euoplos_Rainbow_assert based on recordID
Euoplos_Rainbow_3 <- merge(Euoplos_Rainbow_2, Euoplos_Rainbow_assert, by="recordID", keep.all=TRUE)

#all=TRUE argument ensures a full outer join, keeping all rows from both data frames in the result, even if there's no matching recordID.


# Convert 12-hour format to 24-hour format
twelve_hour_format <- grepl("[APM]{2}", Euoplos_Rainbow_event$eventTime, ignore.case=TRUE)
Euoplos_Rainbow_event$eventTime[twelve_hour_format] <- format(strptime(Euoplos_Rainbow_event$eventTime[twelve_hour_format], format="%I:%M %p"), "%H:%M:%S")

#converting time from AM/PM to HH:MM:SS
convert_time <- function(time) {
  if(grepl("AM|PM", time, ignore.case = TRUE)) {
    return(format(parse_date_time(time, "h:M%p"), "%H:%M:%S"))
  }
  return(time)
}

Euoplos_Rainbow_3$eventTime <- sapply(Euoplos_Rainbow_3$eventTime, convert_time)

#selecting neccesory variables
Euoplos_Rainbow_3 <- Euoplos_Rainbow_3 %>% 
  select(decimalLatitude, decimalLongitude, eventDate,scientificName, taxonConceptID, recordID, dataResourceName, occurrenceStatus, BASIS_OF_RECORD_INVALID, eventID, eventTime, samplingProtocol, basisOfRecord)

#removing duplicates from the dataset
Euoplos_Rainbow_combined <- Euoplos_Rainbow_3 %>% 
  distinct()



Euoplos_Rainbow_combined$eventTime <- hms::as_hms(Euoplos_Rainbow_combined$eventTime)

final_Euoplos_Rainbow <- Euoplos_Rainbow_combined %>%
  filter(basisOfRecord == "HUMAN_OBSERVATION")
```

```{r}
# Save data as an R object in the "data-raw" folder
save(spider, file = "data-raw/spider.rda")
```

## Initial data analysis

<!--
3. Perform a data quality check, and then go ahead and clean the data, saving only the wild sightings. Save the resulting data in a `data` folder as an `WILD_THING_COMMON_NAME.rda` file, so that any special variable types are clearly available. (Replace `WILD_THING_COMMON_NAME` with lower case common name of your assigned wild thing.) *Note:* Some are museum or historical records or live in an animal sanctuary or zoo, which do not truly capture their wild behaviour. Downloading the event information (`galah_select(group = "event")`) can help identify wild sightings.

Weather data pre-processing here too.
-->

```{r}
final_Euoplos_Rainbow$eventHour <- hour(final_Euoplos_Rainbow$eventTime)

final_Euoplos_Rainbow %>%
  ggplot(aes(x = eventHour)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(title = "Distribution of Spider Sightings by Hour of the Day",
       x = "Hour of the Day",
       y = "Frequency") +
  theme_minimal()
```

If considered nighttime hours to be between 6pm and 12am, surprisingly, most sightings of Euoplos Rainbow happens during daytime, which is contrast to initial statement.

```{r}
install.packages("ozmaps")
library(ozmaps)

sf_oz <- ozmap_data("states")

# Add the Australian state boundaries
gg <- ggplot() + geom_sf(data = sf_oz, fill = "#FBFBEF", color = "grey70") +
  geom_point(data = final_Euoplos_Rainbow,
                      mapping = aes(x = decimalLongitude,
                                    y = decimalLatitude
                                   ),
                      color = "blue", alpha = 0.5) +
  geom_point(data = aus_stations, 
             mapping = aes(x = longitude,
                           y = latitude),
             color = "black", alpha = 1) +
  geom_text(data = aus_stations,
            mapping = aes(x = longitude,
                         y = latitude, 
                          label = name),
            size = 2, vjust = 1, hjust = 0.5) +
  coord_sf(ylim = c(-44.5, -10), xlim = c(110, 155)) +
  theme_void() + 
  theme(legend.position = "none") +
  labs(title = "Where is Eupolos Rainbow sighted?")

gg
```

```{r}
gg + coord_sf(ylim = c(-29, -26.5), xlim = c(152, 155)) 

aus_stations %>%
  filter(latitude < -26.5, latitude > -29,
         longitude > 152, latitude < 155) %>%
  filter(name %in% c("brisbane", "maroochydore aero", "logan city water treatment", "murwillumbah (bray park)"))
```


We can see that most of sightings occur on the rear end of eastern Australia

```{r}
library(rnoaa)
library(tidyverse)
aus_stations <- ghcnd_stations() |>
  filter(str_starts(id, "ASN")) |>
  filter(last_year >= 2020) |>
  mutate(wmo_id = as.numeric(wmo_id),
         name = str_to_lower(name)) |>
  select(-state, -gsn_flag) |>
  filter(element %in% c("PRCP", "TMAX", "TMIN")) |>
  nest(element: last_year) |>
  rowwise() |>
  filter(nrow(data) == 3) |>
  select(-data) 
```

### Logan city water treatment (ASN00040854)
```{r}
logan_city <- aus_stations |>
  filter(id == "ASN00040854") |>
  rowwise() |>
  mutate(ts = list(meteo_pull_monitors(
    monitors = id, var = c("PRCP", "TMAX", "TMIN"),
    date_min = "2004-01-01",
    date_max = "2023-09-13") |>
      select(-id))) |>
  rename(lat = latitude, long = longitude, elev = elevation) |> 
  select(id, long, lat, elev, name, wmo_id, ts) %>%
  unnest(ts) |>
  mutate(tmax = tmax/10, tmin = tmin/ 10)
```

### maroochydore aero (ASN00040861)
```{r}
maroochydore <- aus_stations |>
  filter(id == "ASN00040861") |>
  rowwise() |>
  mutate(ts = list(meteo_pull_monitors(
    monitors = id, var = c("PRCP", "TMAX", "TMIN"),
    date_min = "2004-01-01",
    date_max = "2023-09-13") |>
      select(-id))) |>
  rename(lat = latitude, long = longitude, elev = elevation) |> 
  select(id, long, lat, elev, name, wmo_id, ts) %>%
  unnest(ts) |>
  mutate(tmax = tmax/10, tmin = tmin/ 10)
```

### brisbane (ASN00040913) 
```{r}
brisbane <- aus_stations |>
  filter(id == "ASN00040913") |>
  rowwise() |>
  mutate(ts = list(meteo_pull_monitors(
    monitors = id, var = c("PRCP", "TMAX", "TMIN"),
    date_min = "2004-01-01",
    date_max = "2023-09-13") |>
      select(-id))) |>
  rename(lat = latitude, long = longitude, elev = elevation) |> 
  select(id, long, lat, elev, name, wmo_id, ts) %>%
  unnest(ts) |>
  mutate(tmax = tmax/10, tmin = tmin/ 10)
```

### murwillumbah (bray park) (ASN00058158)
```{r}
murwillumbah <- aus_stations |>
  filter(id == "ASN00058158") |>
  rowwise() |>
  mutate(ts = list(meteo_pull_monitors(
    monitors = id, var = c("PRCP", "TMAX", "TMIN"),
    date_min = "2004-01-01",
    date_max = "2023-09-13") |>
      select(-id))) |>
  rename(lat = latitude, long = longitude, elev = elevation) |> 
  select(id, long, lat, elev, name, wmo_id, ts) %>%
  unnest(ts) |>
  mutate(tmax = tmax/10, tmin = tmin/ 10)
```

## Exploratory data analysis

<!--
4. Make plots of the data to check each of your expectations, and report what you learn. *Note:* This might also be a place where visual inference methods *may* be useful to determine if what is seen agrees or disputes what you expected. 

Weather data exploration here too.
-->

## Summary 

## References
